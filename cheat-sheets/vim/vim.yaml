---
title: Vim
description: Vim Cheat Sheet
author: Rico Berger
keywords:
  - Vim
  - Neovim
pages:
  - title: Vim
    columns: 5
    sections:
      - title: Cursor Movement
        items:
          - "`h` - Move cursor left"
          - "`j` - Move cursor down"
          - "`k` - Move cursor up"
          - "`l` - Move cursor right"
          - "`gj` - Move cursor down (multi-line text)"
          - "`gk` - Move cursor up (multi-line text)"
          - "`H` - Move to top of screen"
          - "`M` - Move to middle of screen"
          - "`L` - Move to bottom of screen"
          - "`w` - Jump forwards to the start of a word"
          - "`W` - Jump forwards to the start of a word (words can contain
            punctuation)"
          - "`e` - Jump forwards to the end of a word"
          - "`E` - Jump forwards to the end of a word (words can contain
            punctuation)"
          - "`b` - Jump backwards to the start of a word"
          - "`B` - Jump backwards to the start of a word (words can contain
            punctuation)"
          - "`ge` - Jump backwards to the end of a word"
          - "`gE` - Jump backwards to the end of a word (words can contain
            punctuation)"
          - "`%` - Move cursor to matching character (default supported pairs:
            `()`, `{}`, `[]` - use `:h matchpairs` in Vim for more info)"
          - "`0` - Jump to the start of the line"
          - "`_` - Jump to the first non-blank character of the line"
          - "`$` - Jump to the end of the line"
          - "`g_` - Jump to the last non-blank character of the line"
          - "`gg` - Go to the first line of the document"
          - "`G` - Go to the last line of the document"
          - "`5gg` or `5G` - Go to line 5"
          - "`gd` - Move to local declaration"
          - "`gD` - Move to global declaration"
          - "`fx` - Jump to next occurrence of character x"
          - "`tx` - Jump to before next occurrence of character x"
          - "`Fx` - Jump to the previous occurrence of character x"
          - "`Tx` - Jump to after previous occurrence of character x"
          - "`;` - Repeat previous f, t, F or T movement"
          - "`,` - Repeat previous f, t, F or T movement, backwards"
          - "`}` - Jump to next paragraph (or function/block, when editing code)"
          - "`{` - Jump to previous paragraph (or function/block, when editing
            code)"
          - "`zz` - Center cursor on screen"
          - "`zt` - Position cursor on top of the screen"
          - "`zb` - Position cursor on bottom of the screen"
          - "`Ctrl` + `e` - Move screen down one line (without moving cursor)"
          - "`Ctrl` + `y` - Move screen up one line (without moving cursor)"
          - "`Ctrl` + `b` - Move screen up one page (cursor to last line)"
          - "`Ctrl` + `f` - Move screen down one page (cursor to first line)"
          - "`Ctrl` + `u` - Move cursor and screen up 1/2 page"
          - "`Ctrl` + `d` - Move cursor and screen down 1/2 page"
        tip:
          description:
            "**Tip:** Prefix a cursor movement command with a number to repeat
            it. For example, `4j` moves down 4 lines."
      - title: Insert Mode - Inserting / Appending Text
        items:
          - "`i` - Insert before the cursor"
          - "`I` - Insert at the beginning of the line"
          - "`a` - Insert (append) after the cursor"
          - "`A` - Insert (append) at the end of the line"
          - "`o` - Append (open) a new line below the current line"
          - "`O` - Append (open) a new line above the current line"
          - "`ea` - Insert (append) at the end of the word"
          - "`Ctrl` + `h` - Delete the character before the cursor during insert
            mode"
          - "`Ctrl` + `w` - Delete word before the cursor during insert mode"
          - "`Ctrl` + `j` - Add a line break at the cursor position during
            insert mode"
          - "`Ctrl` + `t` - Indent (move right) line one shiftwidth during
            insert mode"
          - "`Ctrl` + `d` - De-indent (move left) line one shiftwidth during
            insert mode"
          - "`Ctrl` + `n` - Insert (auto-complete) next match before the cursor
            during insert mode"
          - "`Ctrl` + `p` - Insert (auto-complete) previous match before the
            cursor during insert mode"
          - "`Ctrl` + `rx` - Insert the contents of register x"
          - "`Ctrl` + `ox` - Temporarily enter normal mode to issue one
            normal-mode command x"
          - "`Esc` or `Ctrl` + `c` - Exit insert mode"
      - title: Editing
        items:
          - "`r` - Replace a single character"
          - "`R` - Replace more than one character, until `Esc` is pressed"
          - "`J` - Join line below to the current one with one space in between"
          - "`gJ` - Join line below to the current one without space in between"
          - "`gwip` - Reflow paragraph"
          - "`g~` - Switch case up to motion"
          - "`gu` - Change to lowercase up to motion"
          - "`gU` - Change to uppercase up to motion"
          - "`cc` - Change (replace) entire line"
          - "`c$` or `C` - Change (replace) to the end of the line"
          - "`ciw` - Change (replace) entire word"
          - '`ci"` or `ci''` - Change (replace) string in double quotes or
            quotes'
          - "`cw` or `ce` - Change (replace) to the end of the word"
          - "`s` - Delete character and substitute text"
          - "`S` - Delete line and substitute text (same as cc)"
          - "`xp` - Transpose two letters (delete and paste)"
          - "`u` - Undo"
          - "`U` - Restore (undo) last changed line"
          - "`Ctrl` + `r` - Redo"
          - "`.` - Repeat last command"
          - "`Ctrl` + `a` - Increase number"
          - "`Ctrl` + `x` - Decrease number"
        tip:
          description:
            "**Tip:** If you make a visual block over numbers with `Ctrl` + `v`
            and then press `g` + `Ctrl` + `a` it would increment each number by
            `n + 1`. So from `1, 1, 1` you would get `2, 3, 4`."
      - title: Marking Text (Visual Mode)
        items:
          - "`v` - Start visual mode, mark lines, then do a command (like
            y-yank)"
          - "`V` - Start linewise visual mode"
          - "`o` - Move to other end of marked area"
          - "`Ctrl` + `v` - Start visual block mode"
          - "`O` - Move to other corner of block"
          - "`aw` - Mark a word"
          - "`ab` - A block with ()"
          - "`aB` - A block with {}"
          - "`at` - A block with <> tags"
          - "`ib` - Inner block with ()"
          - "`iB` - Inner block with {}"
          - "`it` - Inner block with <> tags"
          - '`i"` - Inner block with double quotes'
          - "`i'` - Inner block with quotes"
          - "`Esc` or `Ctrl` + `c` - Exit visual mode"
        tip:
          description:
            "**Tip:** Instead of `b` or `B` one can also use `(` or `{`
            respectively."
      - title: Visual Commands
        items:
          - "`>` - Shift text right"
          - "`<` - Shift text left"
          - "`y` - Yank (copy) marked text"
          - "`d` - Delete marked text"
          - "`~` - Switch case"
          - "`u` - Change marked text to lowercase"
          - "`U` - Change marked text to uppercase"
      - title: Registers
        items:
          - "`:register` - Show registers content"
          - '`"xy` - Yank into register `x`'
          - '`"xp` - Paste contents of register `x`'
          - '`"+y` - Yank into the system clipboard register'
          - '`"+p` - Paste from the system clipboard register'
        tip:
          description:
            "**Tip:** Registers are being stored in ~/.viminfo, and will be
            loaded again on next restart of vim. Special registers:"
          items:
            - "`0` - Last yank"
            - '`"` - Unnamed register, last delete or yank'
            - "`%` - Current file name"
            - "`#` - Alternate file name"
            - "`*` - Clipboard contents (X11 primary)"
            - "`+` - Clipboard contents (X11 clipboard)"
            - "`/` - Last search pattern"
            - "`:` - Last command-line"
            - "`.` - Last inserted text"
            - "`-` - Last small (less than a line) delete"
            - "`=` - Expression register"
            - "`_` - Black hole register"
      - title: Marks and Positions
        items:
          - "`:marks` - List of marks"
          - "`ma` - Set current position for mark `a`"
          - "`` `a`` - Jump to position of mark `a`"
          - "``y`a`` - Yank text to position of mark `a`"
          - "`` `0`` - Go to the position where Vim was previously exited"
          - '`` `"`` - Go to the position when last editing this file'
          - "`` `.`` - Go to the position of the last change in this file"
          - "` `` ` - Go to the position before the last jump"
          - "`:jumps` - List of jumps"
          - "`Ctrl` + `i` - Go to newer position in jump list"
          - "`Ctrl` + `o` - Go to older position in jump list"
          - "`:changes` - List of changes"
          - "`g,` - Go to newer position in change list"
          - "`g;` - Go to older position in change list"
          - "`Ctrl` + `]` - Jump to the tag under cursor"
        tip:
          description: |
            **Tip:** To jump to a mark you can either use a backtick (`` ` ``) or an apostrophe (`'`). Using an apostrophe jumps to the beginning (first non-blank) of the line holding the mark.

            A local mark is specific to a particular file and is indicated by a lowercase letter, while global marks are universal across all of your files and use uppercase letters. That is, many files can have an `` `a `` mark, while `` `A `` points to a particular location in one particular file.
      - title: Macros
        items:
          - "`qa` - Record macro `a`"
          - "`q` - Stop recording macro"
          - "`@a` - Run macro `a`"
          - "`@@` - Rerun last run macro"
      - title: Comment
        items:
          - "`gc` - Toggle comment for selection"
          - "`gcc` - Toggle comment for the current line"
      - title: Cut and Paste
        items:
          - "`yy` - Yank (copy) a line"
          - "`2yy` - Yank (copy) 2 lines"
          - "`yw` - Yank (copy) the characters of the word from the cursor
            position to the start of the next word"
          - "`yiw` - Yank (copy) word under the cursor"
          - "`yaw` - Yank (copy) word under the cursor and the space after or
            before it"
          - "`y$` or `Y` - Yank (copy) to end of line"
          - "`p` - Put (paste) the clipboard after cursor"
          - "`P` - Put (paste) before cursor"
          - "`gp` - Put (paste) the clipboard after cursor and leave cursor
            after the new text"
          - "`gP` - Put (paste) before cursor and leave cursor after the new
            text"
          - "`dd` - Delete (cut) a line"
          - "`2dd` - Delete (cut) 2 lines"
          - "`dw` - Delete (cut) the characters of the word from the cursor
            position to the start of the next word"
          - "`diw` - Delete (cut) word under the cursor"
          - "`daw` - Delete (cut) word under the cursor and the space after or
            before it"
          - "`d$` or `D` - Delete (cut) to the end of the line"
          - "`x` - Delete (cut) character"
          - "`:3,5d` - Delete lines starting from 3 to 5"
          - "`:g/{pattern}/d` - Delete all lines containing pattern"
          - "`:g!/{pattern}/d` - Delete all lines not containing pattern"
        tip:
          description:
            "**Tip:** You can also use the following characters to specify the
            range:"
          items:
            - "`:.,$d` - From the current line to the end of the file"
            - "`:.,1d` - From the current line to the beginning of the file"
            - "`:10,$d` - From the 10th line to the beginning of the file"
      - title: Indent Text
        items:
          - "`>>` - Indent (move right) line one shiftwidth"
          - "`<<` - De-indent (move left) line one shiftwidth"
          - "`>%` - Indent a block with () or {} (cursor on brace)"
          - "`<%` - De-indent a block with () or {} (cursor on brace)"
          - "`>ib` - Indent inner block with ()"
          - "`>at` - Indent a block with <> tags"
          - "`3==` - Re-indent 3 lines"
          - "`=%` - Re-indent a block with () or {} (cursor on brace)"
          - "`=iB` - Re-indent inner block with {}"
          - "`gg=G` - Re-indent entire buffer"
          - "`]p` - Paste and adjust indent to current line"
      - title: Exiting
        items:
          - "`:w` - Write (save) the file, but don't exit"
          - "`:w !sudo tee %` - Write out the current file using sudo"
          - "`:wq` - Write (save) and quit"
          - "`:x` - Write (save) and quit"
          - "`:q` - Quit (fails if there are unsaved changes)"
          - "`:q!` or `ZQ` - Quit and throw away unsaved changes"
          - "`:wqa` - Write (save) and quit all"
      - title: Search and Replace
        items:
          - "`/pattern` - Search for pattern"
          - "`?pattern` - Search backward for pattern"
          - "`\\vpattern` - Non-alphanumeric characters are interpreted as
            special regex symbols (no escaping needed)"
          - "`n` - Repeat search in same direction"
          - "`N` - Repeat search in opposite direction"
          - "`:%s/old/new/g` - Replace all old with new throughout file"
          - "`:%s/old/new/gc` - Replace all old with new throughout file with
            confirmations"
          - "`:%s/old/new/gci` - Replace all old with new throughout file with
            confirmations (case insensitive)"
          - "`:%s/old/new/gcI` - Replace all old with new throughout file with
            confirmations (case sensitive)"
          - "`:noh` or `ESC` - Remove highlighting of search matches"
      - title: Quickfix
        items:
          - "`:cope[n]` - Open the quickfix window"
          - "`:ccl[ose]` - Close the quickfix window"
          - "`:chi[story]` - Show list of quickfix lists"
          - "`:cnew[er]` - Go to newer quickfix list"
          - "`:col[der]` - Go to older quickfix list"
          - "`:#chi[story]` - Go to quickfix list number #"
          - "`[q` - Go to previous item in quickfix list"
          - "`]q` - Go to next item in quickfix list"
        tip:
          description:
            "**Tip:** To replace a pattern in multiple files, use `:grep` to add
            all files with this pattern to the quickfix list. Afterwards `:cfdo
            %s/old/new/gcI | update` can be used to replace the old pattern with
            a new one."
      - title: Working with Multiple Files
        items:
          - "`:e[dit] file` - Edit a file in a new buffer"
          - "`:%!xxd` - Switch to binary format for existing file"
          - "`:bn[ext]` - Go to the next buffer"
          - "`:bp[revious]` - Go to the previous buffer"
          - "`:ls or :buffers` - List all open buffers"
          - "`:bd[elete]` - Delete a buffer (close a file)"
          - "`:b[uffer]#` - Go to a buffer by index #"
          - "`:b[uffer] file` - Go to a buffer by file"
          - "`:sp[lit] file` - Open a file in a new buffer and split window"
          - "`:vs[plit] file` - Open a file in a new buffer and vertically split
            window"
          - "`:vert[ical] ba[ll]` - Edit all buffers as vertical windows"
          - "`Ctrl` + `ws` - Split window"
          - "`Ctrl` + `wv` - Split window vertically"
          - "`Ctrl` + `ww` - Switch windows"
          - "`Ctrl` + `wq` - Quit a window"
          - "`Ctrl` + `wx` - Exchange current window with next one"
          - "`Ctrl` + `w+` and `Ctrl` + `w-` - Increase / decrease window height"
          - "`Ctrl` + `w>` and `Ctrl` + `w<` - Increase / decrease window width"
          - "`Ctrl` + `w=` - Make all windows equal height & width"
          - "`Ctrl` + `wo` - Make current window the only window"
          - "`Ctrl` + `wh` - Move cursor to the left window (vertical split)"
          - "`Ctrl` + `wl` - Move cursor to the right window (vertical split)"
          - "`Ctrl` + `wj` - Move cursor to the window below (horizontal split)"
          - "`Ctrl` + `wk` - Move cursor to the window above (horizontal split)"
          - "`Ctrl` + `wH` - Make current window full height at far left
            (leftmost vertical window)"
          - "`Ctrl` + `wL` - Make current window full height at far right
            (rightmost vertical window)"
          - "`Ctrl` + `wJ` - Make current window full width at the very bottom
            (bottommost horizontal window)"
          - "`Ctrl` + `wK` - Make current window full width at the very top
            (topmost horizontal window)"
      - title: Tabs
        items:
          - "`:tabnew` - Open a new tab"
          - "`Ctrl` + `wT` - Move the current split window into its own tab"
          - "`gt` - Go to the next tab"
          - "`gT` - Go to the previous tab"
          - "`#gt` - Move to tab number #"
          - "`:tabm[ove] #` - Move current tab to the #th position (indexed from
            0)"
          - "`:tabc[lose]` - Close the current tab and all its windows"
          - "`:tabo[nly]` - Close all tabs except for the current one"
      - title: Diff
        items:
          - "`zf` - Manually define a fold up to motion"
          - "`zd` - Delete fold under the cursor"
          - "`za` - Toggle fold under the cursor"
          - "`zo` - Open fold under the cursor"
          - "`zc` - Close fold under the cursor"
          - "`zr` - Reduce (open) all folds by one level"
          - "`zm` - Fold more (close) all folds by one level"
          - "`zi` - Toggle folding functionality"
          - "`]c` - Jump to start of next change"
          - "`[c` - Jump to start of previous change"
          - "`do` or `:diffg[et]` - Obtain (get) difference (from other buffer)"
          - "`dp` or `:diffpu[t]` - Put difference (to other buffer)"
          - "`:diffthis` - Make current window part of diff"
          - "`:dif[fupdate]` - Update differences"
          - "`:diffo[ff]` - Switch off diff mode for current window"
        tip:
          description:
            "**Tip:** The commands for folding (e.g. `za`) operate on one level.
            To operate on all levels, use uppercase letters (e.g. `zA`). To view
            the differences of files, one can directly start Vim in diff mode by
            running `vimdiff` (`nvim -d`) in a terminal. One can even set this
            as `git difftool`."
      - title: Help
        items:
          - "`:h default-mappings` - Show default key mappings"
          - "`:h motion.txt` - Show available motions"
          - "`:h vim_diff.txt` - Show differences between Vim and Neovim"

  - title: Custom Keymaps, Functions and Plugins
    columns: 5
    sections:
      - title: Working with Multiple Files
        items:
          - "`Shift` + `Up` and `Shift` + `Down` - Increase / decrease window
            height"
          - "`Shift` + `Right` and `Shift` + `Left` - Increase / decrease window
            width"
          - "`Ctrl` + `Left` - Move cursor to the left window (vertical split)"
          - "`Ctrl` + `Right` - Move cursor to the right window (vertical split)"
          - "`Ctrl` + `Down` - Move cursor to the window below (horizontal
            split)"
          - "`Ctrl` + `Up` - Move cursor to the window above (horizontal split)"
      - title: Move Text
        items:
          - "`Alt` + `j` - Move line down"
          - "`Alt` + `k` - Move line up"
      - title: Surround Text
        items:
          - "`gs(` or `gs)` - Surround selection with `()`"
          - "`gs{` or `gs}` - Surround selection with `{}`"
          - "`gs[` or `gs]` - Surround selection with `[]`"
          - "`gs<` or `gs>` - Surround selection with `<>`"
          - '`gs"` - Surround selection with `""`'
          - "`gs'` - Surround selection with `''`"
          - "`` gs` `` - Surround selection with ` `` `"
      - title: Macros
        items:
          - "`Q` + `Q` - Record a macro for a selected `pattern`"
          - "`Ctrl` + `q` - Replay a macro for a selected `pattern`"
      - title: Quickfix
        items:
          - "`Space` + `qo` - Open the quickfix window"
          - "`Space` + `qc` - Close the quickfix window"
          - "`Space` + `qh` - Show list of quickfix lists"
          - "`Space` + `qn` - Go to newer quickfix list"
          - "`Space` + `qp` - Go to older quickfix list"
          - "`Space` + `q#` - Go to quickfix list number #"
          - "`[q` - Go to previous item in quickfix list"
          - "`]q` - Go to next item in quickfix list"
          - "`dd` - Delete item from quickfix list"
          - "`d` - Delete visual selected items from quickfix list"
      - title: Explorer
        items:
          - "`Space` + `ee` - Open `:edit` command in current directory"
          - "`Space` + `ec` - Copy current file"
          - "`Space` + `em` - Move current file"
          - "`Space` + `er` - Remove current file"
          - "`Space` + `ey` - Copy relative path of current file to clipboard"
          - "`Space` + `ew` - Save current file"
          - "`Space` + `eW` - Save current file without running auto commands"
      - title: Find
        items:
          - "`Space` + `ff` - Find files"
          - "`Space` + `fF` - Find files and send results to quickfix list"
          - "`Space` + `fc` - Find files in current directory"
          - "`Space` + `fC` - Find files in current directory and send results
            to quickfix list"
          - "`Space` + `fb` - Find buffers"
          - "`Space` + `fr` - Find recently opened files"
          - "`Space` + `fm` - Find marks"
        tip:
          description:
            "**Tip:** The find command can be changed using the following
            keymaps:"
          items:
            - "`Alt` + `e` - Change the command to `:edit`"
            - "`Alt` + `v` - Change the command to `:vsplit`"
            - "`Alt` + `s` - Change the command to `:split`"
            - "`Alt` + `t` - Change the command to `:tabedit`"
            - "`Alt` + `r` - Change the command to `:!rm`"
      - title: Search
        items:
          - "`Space` + `ss` - Search for a pattern"
          - "`Space` + `sc` - Search for a pattern in the current directory"
          - "`Space` + `s/` - Search for a pattern in the current file"
          - "`Space` + `sw` - Search for the word under the cursor"
          - "`Space` + `sv` - Search for the visual selection"
          - "`Space` + `st` - Search for all todo comments"
      - title: Replace
        items:
          - "`Space` + `rr` - Replace in buffer"
          - "`Space` + `rw` - Replace word under cursor in buffer"
          - "`Space` + `rv` - Replace visual selection in buffer"
          - "`Space` + `rR` - Replace in quickfix list"
          - "`Space` + `rW` - Replace word under cursor in quickfix list"
          - "`Space` + `rV` - Replace visual selection in quickfix list"
      - title: Gitsigns
        items:
          - "`]c` - Jump to next hunk"
          - "`[c` - Jump to previous hunk"
          - "`Space` + `gss` - Stage hunk"
          - "`Space` + `gsr` - Reset hunk"
          - "`Space` + `gsS` - Stage all hunks in current buffer"
          - "`Space` + `gsR` - Reset all hunk in current buffer"
          - "`Space` + `gsu` - Undo last hunk"
          - "`Space` + `gsp` - Preview hunk"
          - "`Space` + `gsb` - Git blame line"
          - "`Space` + `gsB` - Git blame file"
          - "`Space` + `gsd` - Diff"
          - "`Space` + `gsd` - Diff against `~`"
          - "`Space` + `gsq` - Show hunks in quickfix list"
          - "`Space` + `gsl` - Show hunks in location list"
          - "`Space` + `gst` - Toggle word diff and deleted lines"
          - "`GitDiff <base> <head>` - Open diff between `<base>` and `<head>`"
      - title: LSP
        items:
          - "`grn` - Rename"
          - "`gra` - Code actions"
          - "`grf` - Format"
          - "`grr` - Go to references"
          - "`gri` - Go to implementation"
          - "`grt` - Go to type definition"
          - "`gd` or `gD` - Go to definition (in vertical split)"
          - "`K` - Hover documentation in floating window"
          - "`Ctrl` + `s` - Hover signature help in floating window"
          - "`Ctrl` + `w` + `Ctrl` + `d` - Hover diagnostics in floating window"
          - "`grq` - Show diagnostics in quickfix list"
          - "`gO` - Show document symbols in location list"
          - "`gry` - Toggle inlay hints"
          - "`[d` - Go to previous diagnostic"
          - "`]d` - Go to next diagnostic"
          - "`[D` - Go to first diagnostic"
          - "`]D` - Go to last diagnostic"
      - title: Completions
        items:
          - "`Ctrl` + `Space` or `Ctrl` + `x` + `Ctrl` + `o` - Trigger
            completion"
          - "`Ctrl` + `e` - Hide completions"
          - "`Enter` or `Ctrl` + `y` - Accept completion"
          - "`Ctrl` + `n` or `Down` - Select next completion"
          - "`Ctrl` + `p` or `Up` - Select previous completion"
          - "`Ctrl` + `Enter` - Accept inline completion"
      - title: Multicursor
        items:
          - "`Ctrl` + `n` - Add cursor for next word"
          - "`Ctrl` + `a` - Add cursor for all words"
          - "`Ctrl` + `j` - Add cursor below"
          - "`Ctrl` + `k` - Add cursor above"
          - "`Ctrl` + `m` - Match cursors in visual selection"
      - title: Copilot Chat
        items:
          - "`Space` + `co` - Open"
          - "`Space` + `cc` - Close"
          - "`Space` + `ct` - Toggle"
          - "`Space` + `cs` - Stop"
          - "`Space` + `cr` - Reset"
          - "`Tab` - Trigger / accept completion menu for tokens"
          - "`Ctrl` + `c` or `q` - Close the chat window"
          - "`Ctrl` + `l` - Reset and clear the chat window"
          - "`Ctrl` + `s` or `q` - Submit the current prompt"
          - "`grr` - Toggle sticky prompt for line under cursor"
          - "`grx` - Clear all sticky prompts in prompt"
          - "`Ctrl` + `y` - Accept nearest diff"
          - "`gj` - Jump to section of nearest diff"
          - "`gqa` - Add all answers from chat to quickfix list"
          - "`gqd` - Add all diffs from chat to quickfix list"
          - "`gy` - Yank nearest diff to register"
          - "`gd` - Show diff between source and nearest diff"
          - "`gc` - Show info about current chat"
        tip:
          description: |
            - Resources (`#<name>`) - Add specific content (files, git diffs,
              URLs) to your prompt
            - Tools (`@<name>`) - Give LLM access to functions it can call with
              your approval
            - Sticky Prompts (`> <text>`) - Persist context across single chat
              session
            - Models (`$<model>`) - Specify which AI model to use for the chat
            - Prompts (`/PromptName`) - Use predefined prompt templates for
              common tasks
            - Selection - Automatically includes current user selection in
              prompts
      - title: Links
        items:
          - "The Vim Cheat Sheet is inspired by the [Vim Cheat
            Sheet](https://vim.rtorr.com/) from
            [rtorr](https://github.com/rtorr)."
          - |
            The configuration for the plugins with the mentioned keymaps can be found in my personal [dotfiles](https://github.com/ricoberger/dotfiles).

            ![Neovim](./assets/neovim.png)
          - |
            More Neovim related links:

            - [Website](https://neovim.io)
            - [GitHub Repository](https://github.com/neovim/neovim)
            - [Collections of Awesome Neovim Plugins](https://github.com/rockerBOO/awesome-neovim)
            - Download Cheat Sheet as [PDF](./assets/vim-cheat-sheet.pdf) | [PNG](./assets/vim-cheat-sheet.png)
